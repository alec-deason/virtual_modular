use crate::simd_graph::*;
use generic_array::typenum::*;
pub fn lead_voice() -> impl Node<Input = U6, Output = U2> + Clone {
    let (input_input, input) = Bridge::<U6>::new();
    let (bridge_in___detune_0, bridge_out___detune_0) = Bridge::<U1>::new();
    let (bridge_in___trigger_0, bridge_out___trigger_0) = Bridge::<U1>::new();
    let (bridge_in___osc4_0, bridge_out___osc4_0) = Bridge::<U1>::new();
    let (bridge_in___pitch_noise_0, bridge_out___pitch_noise_0) = Bridge::<U1>::new();
    let (bridge_in___release_0, bridge_out___release_0) = Bridge::<U1>::new();
    let (bridge_in___osc3_0, bridge_out___osc3_0) = Bridge::<U1>::new();
    let (bridge_in___attack_0, bridge_out___attack_0) = Bridge::<U1>::new();
    let (bridge_in___real_pitch_0, bridge_out___real_pitch_0) = Bridge::<U1>::new();
    let (bridge_in___max_detune_0, bridge_out___max_detune_0) = Bridge::<U1>::new();
    let (bridge_in___osc1_0, bridge_out___osc1_0) = Bridge::<U1>::new();
    let (bridge_in___osc2_0, bridge_out___osc2_0) = Bridge::<U1>::new();

    Pipe(Pipe(input_input, Sink::default()), Branch(Pipe(Branch(Pipe(Branch(Pipe(Branch(Pipe(Pipe(Pipe(Branch(Pipe(Branch(Pipe(Pipe(Pipe(Branch(Pipe(Pipe(Branch(Pipe(input.clone(), IndexPort::new(1)), Constant(0.0000)), Add), Identity), Pipe(Branch(Branch(Pipe(Branch(Constant(1.0000), Pipe(Branch(Pipe(Pipe(Pipe(Branch(Pipe(input.clone(), IndexPort::new(5)), Constant(0.0000)), Add), Identity), bridge_in___pitch_noise_0), Constant(0.5000)), Mul)), Sub), Pipe(Branch(Constant(1.0000), Pipe(Branch(bridge_out___pitch_noise_0.clone(), Constant(0.5000)), Mul)), Add)), Pipe(Constant(150.0000), Noise::positive())), ModulatedRescale)), Mul), Identity), bridge_in___real_pitch_0), Constant(0.0)), WaveTable::sine()), Pipe(Branch(Constant(0.0010), Pipe(Branch(Branch(Branch(Pipe(Pipe(Pipe(Branch(Pipe(input.clone(), IndexPort::new(2)), Constant(0.0000)), Add), Identity), bridge_in___attack_0), Constant(0.0000)), Branch(Constant(1.0000), Pipe(Pipe(Pipe(Branch(Pipe(input.clone(), IndexPort::new(3)), Constant(0.0000)), Add), Identity), bridge_in___release_0))), Pipe(Pipe(Pipe(Branch(Pipe(input.clone(), IndexPort::new(0)), Constant(0.0000)), Add), Identity), bridge_in___trigger_0)), InlineADSREnvelope::default())), Portamento::default())), Mul), Identity), bridge_in___osc1_0), Pipe(Pipe(Pipe(Branch(Pipe(Branch(Pipe(Branch(Pipe(Branch(bridge_out___real_pitch_0.clone(), Constant(2.0000)), Mul), Pipe(Branch(Branch(Constant(0.0000), Pipe(Pipe(Constant(100.0000), Identity), bridge_in___max_detune_0)), Pipe(Pipe(Pipe(Branch(Pipe(input.clone(), IndexPort::new(4)), Constant(0.0000)), Add), Identity), bridge_in___detune_0)), ModulatedRescale)), Add), Constant(0.0)), WaveTable::sine()), Pipe(Branch(Constant(0.0010), Pipe(Branch(Branch(Branch(Pipe(Branch(bridge_out___attack_0.clone(), Constant(0.5000)), Mul), Pipe(Branch(bridge_out___attack_0.clone(), Constant(0.5000)), Mul)), Branch(Constant(0.5000), bridge_out___release_0.clone())), bridge_out___trigger_0.clone()), InlineADSREnvelope::default())), Portamento::default())), Mul), Identity), bridge_in___osc2_0)), Add), Pipe(Branch(Pipe(Pipe(Pipe(Branch(Pipe(Branch(Pipe(Branch(Pipe(Branch(bridge_out___real_pitch_0.clone(), Constant(3.0000)), Mul), Pipe(Branch(Branch(Constant(0.0000), bridge_out___max_detune_0.clone()), Pipe(Branch(bridge_out___detune_0.clone(), Constant(1.3000)), Mul)), ModulatedRescale)), Add), Constant(0.0)), WaveTable::sine()), Pipe(Branch(Constant(0.0010), Pipe(Branch(Branch(Branch(Pipe(Branch(bridge_out___attack_0.clone(), Constant(0.2500)), Mul), Pipe(Branch(bridge_out___attack_0.clone(), Constant(0.2500)), Mul)), Branch(Constant(0.2000), bridge_out___release_0.clone())), bridge_out___trigger_0.clone()), InlineADSREnvelope::default())), Portamento::default())), Mul), Identity), bridge_in___osc3_0), Pipe(Pipe(Pipe(Branch(Pipe(Branch(Pipe(Branch(Pipe(Branch(bridge_out___real_pitch_0.clone(), Constant(4.0000)), Mul), Pipe(Branch(Branch(Constant(0.0000), bridge_out___max_detune_0.clone()), Pipe(Branch(bridge_out___detune_0.clone(), Constant(0.8000)), Mul)), ModulatedRescale)), Add), Constant(0.0)), WaveTable::sine()), Pipe(Branch(Constant(0.0010), Pipe(Branch(Branch(Branch(Pipe(Branch(bridge_out___attack_0.clone(), Constant(0.1000)), Mul), Pipe(Branch(bridge_out___attack_0.clone(), Constant(0.1000)), Mul)), Branch(Constant(0.1000), bridge_out___release_0.clone())), bridge_out___trigger_0.clone()), InlineADSREnvelope::default())), Portamento::default())), Mul), Identity), bridge_in___osc4_0)), Add)), Add), Constant(0.2500)), Mul), Pipe(Branch(Pipe(Branch(Pipe(Branch(bridge_out___osc1_0.clone(), bridge_out___osc2_0.clone()), Add), Pipe(Branch(bridge_out___osc3_0.clone(), bridge_out___osc4_0.clone()), Add)), Add), Constant(0.2500)), Mul)))
}
